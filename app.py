import streamlit as st
import os
from groq import Groq
from apikey import groq_apikey  # Importar la clave de API desde apikey.py

# Configuraci√≥n de la p√°gina
st.set_page_config(
    page_title="Asistente M√©dico Virtual",
    page_icon="üè•",
    layout="wide"
)

# Estilos CSS personalizados
st.markdown("""
    <style>
        .app-header {
            display: flex;
            align-items: center;
            gap: 20px;
            padding: 1rem;
            margin-bottom: 2rem;
        }
        .logo-container {
            width: 100px;
            height: 100px;
        }
        .logo-container img {
            width: 100%;
            height: 100%;
            object-fit: contain;
        }
        .title-container {
            flex-grow: 1;
        }
        .medical-warning {
            background-color: #e3f2fd;
            color: #1565c0;
            padding: 1rem;
            border-radius: 5px;
            margin-bottom: 1rem;
            border-left: 5px solid #1565c0;
            font-size: 16px;
        }
        .important-text {
            color: #d32f2f;
            font-weight: bold;
        }
    </style>
""", unsafe_allow_html=True)

client = Groq(api_key=groq_apikey)

# Prompt inicial para configurar el comportamiento del asistente m√©dico
SISTEMA_PROMPT = """Eres un asistente m√©dico virtual dise√±ado para proporcionar informaci√≥n m√©dica general y orientaci√≥n b√°sica. 
Importantes consideraciones:
1. Siempre aclara que no reemplazas la consulta con un profesional m√©dico real.
2. En casos de emergencia, indica que deben buscar atenci√≥n m√©dica inmediata.
3. Proporciona informaci√≥n basada en evidencia m√©dica actualizada.
4. Mant√©n un tono profesional pero amable y emp√°tico.
5. Si no est√°s seguro de algo, ind√≠calo claramente.
6. Evita dar diagn√≥sticos definitivos, en su lugar, sugiere posibles causas y recomienda consultar a un m√©dico.
7. Proporciona informaci√≥n sobre prevenci√≥n y h√°bitos saludables cuando sea apropiado."""

# Funci√≥n para generar respuestas
def generar_respuesta(prompt, historial):
    mensajes = [{"role": "system", "content": SISTEMA_PROMPT}]
    
    for mensaje in historial:
        mensajes.append({
            "role": "user" if mensaje["is_user"] else "assistant",
            "content": mensaje["content"]
        })
    
    mensajes.append({"role": "user", "content": prompt})
    
    chat_completion = client.chat.completions.create(
        messages=mensajes,
        model="mixtral-8x7b-32768",
        temperature=0.7,
        max_tokens=2048
    )
    
    return chat_completion.choices[0].message.content

# Inicializar el historial de chat en la sesi√≥n si no existe
if "mensajes" not in st.session_state:
    st.session_state.mensajes = []

# Header con logo y t√≠tulo
st.markdown("""
    <div class="app-header">
        <div class="title-container">
            <h1>üè• VITAL BOT: Asistente M√©dico Virtual</h1>
        </div>
    </div>
""", unsafe_allow_html=True)

# Mensaje de advertencia con nuevo dise√±o
st.markdown("""
    <div class="medical-warning">
        ‚öïÔ∏è Este asistente proporciona informaci√≥n m√©dica general y orientaci√≥n b√°sica.
        <br><span class="important-text">Nota importante:</span> Este servicio no sustituye la consulta con un profesional m√©dico.
        <br><span class="important-text">En caso de emergencia, busque atenci√≥n m√©dica inmediata.</span>
    </div>
""", unsafe_allow_html=True)

# √Årea de chat
for mensaje in st.session_state.mensajes:
    with st.chat_message("user" if mensaje["is_user"] else "assistant"):
        st.write(mensaje["content"])

# Input del usuario
if prompt := st.chat_input("Describe tus s√≠ntomas o haz una pregunta m√©dica..."):
    with st.chat_message("user"):
        st.write(prompt)
    
    st.session_state.mensajes.append({"content": prompt, "is_user": True})
    
    with st.chat_message("assistant"):
        with st.spinner("Analizando tu consulta..."):
            respuesta = generar_respuesta(prompt, st.session_state.mensajes)
            st.write(respuesta)
    
    st.session_state.mensajes.append({"content": respuesta, "is_user": False})

# Barra lateral con informaci√≥n y configuraciones
with st.sidebar:
    st.title("‚ÑπÔ∏è Informaci√≥n")
    # Usamos st.sidebar.image y luego HTML para dar margen
    st.sidebar.markdown("""
        <div style="display: flex; justify-content: center; margin-left: 30px;">
            """, unsafe_allow_html=True)

    st.sidebar.image("vitalbot.jpg", width=100)

    st.sidebar.markdown("""
        </div>
        """, unsafe_allow_html=True)

    

    st.markdown("""
    ### Sobre este asistente
    Este asistente m√©dico virtual puede ayudarte con:
    - Informaci√≥n general sobre condiciones m√©dicas
    - Orientaci√≥n sobre s√≠ntomas comunes
    - Consejos de prevenci√≥n y vida saludable
    - Informaci√≥n sobre medicamentos generales
    
    ### ‚ö†Ô∏è Limitaciones
    - No puede diagnosticar enfermedades
    - No reemplaza la consulta m√©dica profesional
    - No puede recetar medicamentos
    - No maneja emergencias m√©dicas
    
    ### üö® En caso de emergencia
    Contacta inmediatamente a servicios de emergencia o acude al centro m√©dico m√°s cercano.
    """)
    
    if st.button("üóëÔ∏è Limpiar conversaci√≥n"):
        st.session_state.mensajes = []
        st.rerun()

    especialidad = st.selectbox(
        "√Årea de inter√©s",
        ["Medicina General", "Pediatr√≠a", "Cardiolog√≠a", "Nutrici√≥n", "Dermatolog√≠a"]
    )